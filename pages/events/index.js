import Head from 'next/head'
import axios from "axios";
import {API_URL} from "../../config/index";
import EventItem from "../../components/Event-Item/EventItem";
import Pagination from "../../components/Pagination/Pagination";

const PER_PAGE = 2;

const EventsPage = ({events, total, page}) => {
    const lastPage = Math.ceil(total / PER_PAGE);
    return (
        <>
            <Head>
                <title>Hottest Party Events</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <h1>Upcoming Events</h1>
            {events.length === 0 && <h3>No events to show</h3>}
            {events.map(event => <EventItem key={event.id} event={event}/>)}

           <Pagination total={total} page={page} />
        </>
    )
}

export default EventsPage;

export const getServerSideProps = async (context) => {
    const {query: {page = 1}} = context;
    const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE;
    //fetch total or count
    const {data: total} = await axios.get(`${API_URL}/events/count`)
    const {data} = await axios.get(`${API_URL}/events?_sort=date:ASC&_limit=${PER_PAGE}&_start=${start}`);
    const events = data;

    return {
        props: {events, page: +page, total}
    }
}

// export async function getServerSideProps({ query: { page = 1 } }) {
//     // Calculate start page
//     const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE
//
//     // Fetch total/count
//     const totalRes = await fetch(`${API_URL}/events/count`)
//     const total = await totalRes.json()
//
//     // Fetch events
//     const eventRes = await fetch(
//         `${API_URL}/events?_sort=date:ASC&_limit=${PER_PAGE}&_start=${start}`
//     )
//     const events = await eventRes.json()
//
//     return {
//         props: { events, page: +page, total },
//     }
// }